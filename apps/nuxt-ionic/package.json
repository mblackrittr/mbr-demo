{
  "name": "@mbr/nuxonic",
  "type": "module",
  "version": "0.0.0",
  "private": true,
  "description": "MBR | NÃ∑ UÃ¥ XÃ¥Ã¥ OÃ∑ NÃ¥ IÃ∑ CÃ¥Ã¥ - Demo of Nuxt with Ionic.",
  "scripts": {
    "build": "nuxi build",
    "dev": "dotenv -- nuxi dev --port $BASE_PORT",
    "devo": "npm rum dev -- -o",
    "devl": "npm rum dev -- --host",
    "dev:pwa": "VITE_PLUGIN_PWA=true nuxi dev",
    "generate": "nuxi generate",
    "!COMMENT (2024-02-28 14:13)": "zLabs | Black | NOTE: Can't use `prepare`, nor `postinstall` (whereby there's also `install` available) with Bun as it just goes nuts on these when using `bun add/remove` within `workspaces` (but, to surprise, not when run in root (`/`)!) and executes the given `prepare|postinstall` in root (`/`) context! üôÄ DODO: Open issue with these \"Ovens\"! üòπüí¶",
    "!COMMENT (2024-03-01 12:21)": "zLabs | Black | UPDATE: PNPM doesn't run these at all on `add`/`remove` within `workspaces`, but (crazily enough) when `add` is run in root (`/`), yet it runs them in the right context, so it doesn't mess around!",
    "!COMMENT (2024-03-01 12:28)": "zLabs | Black | SOLUTION/WORKAROUND: Don't add anything by command but directly to `package.json` and run a plain `bun install`, yeah, hell - #OhHellboyYeah!",
    "!COMMENT (2024-03-01 12:43)": "zLabs | Black | UPDATE: \"Externalized\" the shell commands to own script command, so this will just plain fail when some package manager will call them in weird contexts! ‚úäüèª",
    "prepare": "npm run init",
    "init": "echo 'Nuxt Postinstall' && (test -d ./.nuxt && echo 'Already setup (\"nuxi prepare\")' || nuxi prepare) && echo 'Capacitor: Android' && (test -d ./android && echo 'Already setup!' || cap add android) && echo 'Capacitor: iOS' && (test -d ./ios && echo 'Already setup!' || cap add ios) && echo 'DONE! üòª'",
    "init:force": "DODO (2024-02-20): Reset everything - yet, non-destructive in that no touched parts/code will be harmed (currently applicable to `android/` and `ios/`)!",
    "start": "dotenv -- PORT=$BASE_PORT node .output/server/index.mjs",
    "start:generate": "npx serve .output/public",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:staged": "lint-staged",
    "!COMMENT (2024-02-15 07:29)": "zLabs | Black | DODO: Include solution to (`local`, `root` (`/`), `global`?) `.env`, incl. getting a project/repo's root path to use in such situations.",
    "release:lint": "eslint . && cd ../../ && npm run spl",
    "release:fix": "eslint . --fix && cd ../../ && npm run spf",
    "typecheck": "vue-tsc --noEmit",
    "cag": "capacitor-assets generate --ios --android --logoSplashScale 0.5 --iconBackgroundColor '#ff871b' --iconBackgroundColorDark '#ff871b' --splashBackgroundColor '#000' --splashBackgroundColorDark '#000'",
    "cs": "cap sync",
    "gcs": "npm run generate && cap sync",
    "ca": "dotenv -- cap run --no-sync android",
    "ci": "dotenv -- cap run --no-sync ios",
    "cae": "npm run ca -- --target $ANDROID_VIRTUAL",
    "cad": "npm run ca -- --target $ANDROID_DEVICE",
    "cie": "npm run ci -- --target $IOS_VIRTUAL",
    "cid": "npm run ci -- --target $IOS_DEVICE",
    "cael": "npm run cae -- -l --port $BASE_PORT",
    "cadl": "npm run cad -- -l --port $BASE_PORT",
    "ciel": "npm run cie -- -l --port $BASE_PORT",
    "cidl": "npm run cid -- -l --port $BASE_PORT",
    "bra": "./android/gradlew -p ./android assembleRelease && apksigner sign --ks ~/.android/debug.keystore --ks-pass pass:android --in android/app/build/outputs/apk/release/app-release-unsigned.apk --out android/app/build/outputs/apk/release/app-release-signed.apk",
    "brae": "dotenv -- npm run bra && native-run android --target ANDROID_VIRTUAL --app ./android/app/build/outputs/apk/release/app-release-signed.apk",
    "brad": "dotenv -- npm run bra && native-run android --target ANDROID_DEVICE --app ./android/app/build/outputs/apk/release/app-release-signed.apk",
    "brie": "",
    "brid": ""
  },
  "dependencies": {
    "@capacitor/android": "5.7.0",
    "@capacitor/app": "5.0.7",
    "@capacitor/assets": "3.0.4",
    "@capacitor/browser": "5.2.0",
    "@capacitor/cli": "5.7.0",
    "@capacitor/core": "5.7.0",
    "@capacitor/device": "5.0.7",
    "@capacitor/haptics": "5.0.7",
    "@capacitor/ios": "5.7.0",
    "@capacitor/keyboard": "5.0.8",
    "@capacitor/splash-screen": "5.0.7",
    "@capacitor/status-bar": "5.0.7",
    "@hugotomazi/capacitor-navigation-bar": "3.0.0",
    "@mbr/surrealdb": "^0.0.0",
    "@nuxtjs/ionic": "0.13.1",
    "vite-plugin-top-level-await": "1.4.1"
  },
  "devDependencies": {
    "@iconify-json/carbon": "1.1.30",
    "@iconify-json/twemoji": "1.1.15",
    "@nuxt/test-utils": "3.11.0",
    "@nuxtjs/color-mode": "3.3.2",
    "@pinia/nuxt": "0.5.1",
    "@unocss/eslint-config": "0.58.5",
    "@unocss/nuxt": "0.58.5",
    "@vite-pwa/nuxt": "0.5.0",
    "@vueuse/nuxt": "10.8.0",
    "consola": "3.2.3",
    "nuxt": "3.10.3",
    "nuxt-module-eslint-config": "0.1.0",
    "pinia": "2.1.7",
    "typescript": "5.3.3",
    "vue-tsc": "1.8.27"
  },
  "!COMMENT (2024-02-26 00:47): zLabs | Black | Centralized most eslint to root": {
    "(Was added `dependencies`) @types/eslint__eslintrc": "2.1.1",
    "@antfu/eslint-config": "2.6.4",
    "eslint": "npm:eslint-ts-patch@8.57.0-0",
    "eslint-plugin-format": "0.1.0",
    "eslint-ts-patch": "^8.57.0-0"
  },
  "!COMMENT:": "zLabs | Black | Just for a simple convention, we add packages to `dependencies` and leave `devDependencies` the untouched default of `Vitesse Nuxt 3`"
}
